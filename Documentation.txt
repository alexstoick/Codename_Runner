

** MonsterVector:
	- holds all the targetable objects ( enemy airplane, monsters, sentries )
	- has 3 vectors: monsters (names), transforms (transforms), angles (holds the angle with which they were spawned.
	- has static functions for adding/retrieving information about its vectors.

** SpawnOnLoft:
	- exists on all new objects that are spawned and it is the one that controls that the objects are spawned exactly on the loft.
	- when an object is added to the loft they are given a random rotation which is important for some objects (sentry gun)
	- also triggers their addition to the MonsterVector class.

** Controller:
	- has global static variables that are required by different classes.
	- contains constants that are used in CollisionHandler ( HP gained, fuel gained, etc )
	- contains the amount of distance after which a new sentry/plane/etc will spawn
	

1. Spawning Scripts

	1a. SpawnBoss
		- handles the change in the camera FOV when the boss is spawned
		- counts down the time until the next boss spawn
		- when the boss spawns does several initializations to global variables.
		
	1b. SpawnBox
		- spawns a box whenever the loft moved more a well defined distance.
		
	1c. SpawnCoin
		- spawns a coin at a predefined position (in relation with the turret in which it is placed)
		
	1d. SpawnEnemyAirplane
		- after a predifined distance has passed will spawn an enemy aircraft.
		- also initiates its patrolling
		
	1e. SpawnMonster
		- spawn the monster and initiate the patrolling
		
	1f. SpawnSentry
		- spawns the sentry
		- will search for its children to setup their correct rotation in relationship with the loft so that the guns will not shoot through the loft
	
	1g. SpawnTree
		- spawns a leaf from an array of 7

2. Runner Actions

	2a. Collision Handler
		- handles the collision with all objects
		- creates particle effects ( can be edited from the editor )
		- plays 4 types of sounds: roll-over, hit by bullet, coin collection and bonus health (all of these can be changed from the editor)
		
	2b. Damage Smoke
		- displays a smoke starting from the plane in respect to its percetange of HP
		
	2c. MoveRunnerNew
		- main movement class - handles left/right.
		- also handles the firing event.
		- animates the runner.
		
	2d. ReturnToRotation
		- this is responsible for the plane rotation around its own axis (tilting to left and right)
		- has variables to set the paramaters for timers
		
	2e. SwipeDectection2
		- this translates the swiping gestures to actions and forwards them to MoveRunnerNew
		- also listens for fire events (taps)
		- miniturret events ( 2 fingers down )
		
3. Progress Bars

	3a. BossHealthBar
		- only appears when the boss is active
		- it is in the center of the screen
		
	3b. FireProgressBar
		- shows how much heat your miniturrets have (if it reaches 100% you will be unable to fire)
		
	3c. FuelProgressBar
		- how much fuel you have left
		- decreases by a flat amount so that every 60 seconds you will run out of fuel
		
	3d. HealthProgressBar
		- show how much health you have left
		
4. Bullet Scripts

	4a. BulletFollowTarget
		- attached to the missile object
		- this will follow a predefinied object; if it loses that object it will try to search for it in MonsterVector; if the object is no longer to be found the rocket unlocks from its target and continues on its current path.
		- otherwise, the rocket is animated at a certain speed towards the target.
		
	4b. BulletForTurret
		- attached to the 2 miniguns on the turret
		- will spawn bullets if the turret can 'see' the plane or if there is a difference in angles < 60
	
	4c. PlaneShootForward
		- attached to the miniguns mounted on the plain's wings
		- when they fire a bullet is shot towards the forward of the plane
	
	4d. RockCollisionHandler
		- attached to the guided missile
		- handles collision and creates particle effects & sounds
	
	4e. MovePlaneBullet
		- moves the plane bullet forward
		- handles collision, creates particle effects & sounds
		
	4f. MoveTurretBullet
		- attached to the turret bullets
		- they move to a predefined position ( which will always remain behind the plane, unless going in straight line )

	4g. MoveBossBullet
		- attached to the boss' bullets
		- bullets are animated towards the plane critical hit area

5. Loft

	5a. LoftMovement
		- attached to the BigGroup and moves it across the loft
		- has functions for speed; if it is stopped, etc.
		
	5b. RockMovementOnLoft
		- this is attached to the guided missile so that when it has no target it will go along the loft.
	
	5c. BossMovementOnLoft
		- moves the boss along the loft until it reaches 20% of the loft - which is where the player can start shooting it.
	
6. Buttons

	6a.	StartButton
		- when it is pressed some initializations are done
		- is shown when the players is dead/ not spawned.
	
	6b. ShootRocket
		- When this button is touched it will shoot a guided missile.
		
7. Boss
	
	7a. BossCollisionHandler
		- this is where it counts with how many bullets it has collisioned and then sends it over to BossEvasiveAction
		- check in which zone of the plane the collision has happened ( 3 zones - and some can be deactivated depending on boss dificulty )
	
	7b. BossCrosshair
		- shows a red box where the player is targeting and all the bullets will go there during the period in which that box is shown
	
	7c. BossEvasiveAction
		- after a certain number of bullets has been reached the boss will make a fast turn left/right in order to avoid additional hits.
		
	7d. FollowPlayerRotation
		- the boss will try to stay on the same rotation as the player in order to shoot him
		- has a cooldown between each move and parameters for the speed of the move

Additional Scripts:
	*a. FPS indicator
	*b. Score
	

	
